Функція any

Функція any() є вбудованою функцією, яка повертає True, якщо хоча б один елемент із заданого об'єкта 
ітерації є істинним. Якщо об'єкт ітерації порожній або всі його елементи є хибними, то any() повертає False.

Розглянемо декілька прикладів, щоб зрозуміти принцип роботи функції.

Перевіримо чи наявний хоч один елемент в списку який є істинним?

nums = [0, False, 5, 0]
result = any(nums)  
print(result)

Код поверне True, оскільки 5 є істинним значенням в списку nums

В функцію можна передавати генератор або list comprehension. Наприклад перевіримо чи є в списку парні числа?

nums = [1, 3, 5, 7, 9]
result = any(x % 2 == 0 for x in nums)  
print(result)

Код поверне False, оскільки немає парних чисел в списку nums

Основне застосування функції any у сценаріях, де потрібно визначити, чи хоча б один елемент в колекції 
відповідає певній умові. Досить часто її використовують для поєднання з іншими функціями, такими як 
map() або list comprehensions, для більш складних умов перевірки.

Функція all

Функція all() є вбудованою функцією, яка повертає True, якщо всі елементи в переданому їй об'єкті 
ітерації є істинними - тобто не False, 0, "", None або будь-яке інше значення, яке Python оцінює 
як хибне. Але будьте уважні, якщо об'єкт ітерації порожній, функція all() повертає True.

Наприклад перевірка, чи всі елементи у списку істинні?

nums = [1, 2, 3, 4]
result = all(nums)  
print(result)

Код поверне True, оскільки всі числа є істинними.

Розглянемо більш складні приклади та перевіримо список на якусь умову.

Чи всі елементи списку є парними?

nums = [1, 2, 3, 4]
is_all_even = all(x % 2 == 0 for x in nums) 
print(is_all_even)

Код виведе False, оскільки не всі числа парні в списку nums.

Чи всі слова у списку мають велику початкову букву?

words = ["Hello", "World", "Python"]
is_all_title_case = all(word.istitle() for word in words)
print(is_all_title_case)

Тут код поверне True, оскільки всі слова починаються з великої букви.

Функція all() є корисним інструментом, коли потрібно перевірити, чи вся колекція даних відповідає певним 
вимогам або умовам, наприклад, всі елементи є істинними, всі числа є парними, всі рядки відповідають 
певному формату тощо. Це забезпечує елегантний спосіб перевірити умови, які застосовуються до всіх 
елементів об'єкта ітерації, замість використання циклів або більш складних конструкцій.

Загалом, використання функцій any(), all(), map(), filter() і технік comprehensions забезпечує більш 
чистий, лаконічний та ефективний код, особливо при роботі з даними та колекціями.