Парсинг дати із рядка

Коли потрібно відобразити дату та час у зрозумілому для людини форматі, ми використовуємо метод strftime. Він застосовується при записувані часових міток у файли логування, при відображані дати та часу на веб-сторінках або в інтерфейсах користувача, а також при форматуванні дат для збереження в базах даних.



Отже метод strftime використовується для форматування об'єктів дати та часу datetime у рядки за допомогою специфічних форматних кодів. Цей метод дає можливість представити дату та час у зручному для читання форматі або в форматі, що відповідає специфічним вимогам.



Синтаксис методу strftime виглядає наступним чином:



datetime_object.strftime(format)



Де datetime_object - це об'єкт datetime, а format - рядок формату, який визначає, як дата та час повинні бути представлені.



Кожен код у рядку формату починається з символу % і представляє певний компонент дати або часу. Ось деякі з найбільш використовуваних кодів:



%Y - рік з чотирма цифрами (наприклад, 2023).
%y - рік з двома цифрами (наприклад, 23).
%m - місяць як номер (наприклад, 03 для березня).
%d - день місяця як номер (наприклад, 14).
%H - година (24-годинний формат) (наприклад, 15).
%I - година (12-годинний формат) (наприклад, 03).
%M - хвилини (наприклад, 05).
%S - секунди (наприклад, 09).
%A - повна назва дня тижня (наприклад, Tuesday).
%a - скорочена назва дня тижня (наприклад, Tue).
%B - повна назва місяця (наприклад, March).
%b або %h - скорочена назва місяця (наприклад, Mar).
%p - AM або PM для 12-годинного формату.


Розглянемо декілька прикладів



✂️ Цей код можна запустити!

from datetime import datetime

now = datetime.now()

# Форматування дати і часу
formatted_date = now.strftime("%Y-%m-%d %H:%M:%S")
print(formatted_date) 

# Форматування лише дати
formatted_date_only = now.strftime("%A, %d %B %Y")
print(formatted_date_only)

# Форматування лише часу
formatted_time_only = now.strftime("%I:%M %p")
print(formatted_time_only)  

# Форматування лише дати
formatted_date_only = now.strftime("%d.%m.%Y")
print(formatted_date_only)



Виведення:

2023-12-18 01:37:07
Monday, 18 December 2023
01:37 AM
18.12.2023



Метод strptime в Python використовується для перетворення рядків у об'єкти datetime. Цей метод є протилежністю до strftime, який перетворює об'єкти datetime у рядки. strptime дозволяє аналізувати рядки, що містять дату та/або час, і перетворювати їх на структуровані об'єкти datetime за допомогою визначеного формату.



Синтаксис методу strptime виглядає наступним чином:



datetime_object = datetime.strptime(string, format)



де:

string - рядок, який містить дату та/або час.
format - рядок формату, який вказує, як розібрати string.


Коди форматування для strptime такі ж, як і для strftime. Наприклад, %Y представляє рік із чотирма цифрами, %m - місяць у вигляді двоцифрового числа тощо.



Розглянемо випадок коли з веб-сайту є рядок дата "2023.03.14" якогось посту і нам треба перед тим як зберегти дату в базі даних перетворити її на об'єкт datetime



✂️ Цей код можна запустити!

from datetime import datetime

# Припустимо, у нас є дата у вигляді рядка
date_string = "2023.03.14"

# Перетворення рядка в об'єкт datetime
datetime_object = datetime.strptime(date_string, "%Y.%m.%d")
print(datetime_object)  # Виведе об'єкт datetime, що відповідає вказаній даті та часу



У цьому прикладі рядок date_string перетворюється в об'єкт datetime за допомогою визначеного формату: "2023.03.14" це "%Y.%m.%d".



Виведення:



2023-03-14 00:00:00



З точки зору застосування, метод strptime корисний, коли потрібно обробляти дати та часи, які отримані у форматі рядка, наприклад, з текстових файлів, користувацького вводу, веб-запитів або баз даних. Він дозволяє перетворити ці рядки на об'єкти datetime, якими вже потім легко маніпулювати в коді.