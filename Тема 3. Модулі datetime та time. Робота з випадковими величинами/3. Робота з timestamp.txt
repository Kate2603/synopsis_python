Робота з timestamp

У контексті програмування та обробки даних, термін timestamp (часова мітка) використовується 
для вказівки конкретного моменту в часі. Це зазвичай представляється як кількість секунд 
(або мілісекунд/мікросекунд у деяких системах) з певної початкової дати, найчастіше 
з 1 січня 1970 року в UTC, це часовий пояс Гринвіча. Детально про сам UTC поговоримо трошки далі. 
Поки timestamp для нас це просто прийнята константа і нічого особливого вона не означає. 
Просто для зручності люди колись почали відраховувати час в секундах з цієї миті і це 
виявилося дуже зручно. Є стандартним способом представлення часу в багатьох операційних 
системах та програмних мовах.

Адже порівняти два числа завжди легше і швидше, ніж порівняти складну структуру дат і часів. 
Ви зустрінете використання timestamp в програмуванні, базах даних, логуванні подій та при збереженні 
інформації про часові моменти подій.

☝ timestamp є універсальним способом представлення часу, оскільки він не залежить від часових 
зон і календарних систем.

У Python ви можете перетворити об'єкт datetime в timestamp і навпаки. 
Конвертація datetime в timestamp

✂️ Цей код можна запустити!

from datetime import datetime

# Поточний час
now = datetime.now()

# Конвертація datetime в timestamp
timestamp = datetime.timestamp(now)
print(timestamp)  # Виведе timestamp поточного часу

Виведення:

1702854066.56633

Конвертація timestamp в об'єкт datetime

✂️ Цей код можна запустити!

from datetime import datetime

# Припустимо, є timestamp
timestamp = 1617183600

# Конвертація timestamp назад у datetime
dt_object = datetime.fromtimestamp(timestamp)
print(dt_object)  # Виведе відповідний datetime

Виведення:

2021-03-31 12:40:00

