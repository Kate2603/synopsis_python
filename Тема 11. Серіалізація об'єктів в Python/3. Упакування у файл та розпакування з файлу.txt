Упакування у файл та розпакування з файлу

Серіалізація у файл і десеріалізація з файлу дозволяють безпосередньо зберігати та відновлювати 
об'єкти у файловій системі. За це відповідають методи dump та load, що упаковують дані у файл 
та розпаковують із файлу відповідно.

Використання pickle.dump(data, file) зберігає об'єкт data у файлі data.pickle.

import pickle

# Об'єкт для серіалізації
my_data = {"key": "value", "num": 100}

# Серіалізація об'єкта в файл
with open("data.pickle", "wb") as file:
    pickle.dump(my_data, file)

Після виконання коду ми збережемо словник **data** у файл. Тепер якщо нам знадобляться ці 
данні ми можемо виконати десеріалізацію даних з цього файлу, наприклад в іншому скрипті:

import pickle

# Десеріалізація об'єкта з файлу
with open('data.pickle', 'rb') as file:
    deserialized_data = pickle.load(file)

# Виведе вихідний об'єкт Python
print(deserialized_data)

Метод pickle.load(file) читає та відновлює об'єкт з файлу data.pickle. І ми в змінній 
deserialized_data отримаємо словник з тими ж значеннями, що і в попередньому прикладі у словника data.

{'key': 'value', 'num': 100}
