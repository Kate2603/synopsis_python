6. Регулярні вирази та розширена робота з рядками

1. Який метод у Python використовується для заміни входжень патерну у рядку?

--re.findall()
--re.split()
!-re.sub()
--re.search()

Правильно! Метод re.sub() використовується для заміни входжень патерну у рядку.

2. Яка функція Python використовується для знаходження всіх входжень патерну у рядку?

--re.sub()
!-re.findall()
--re.match()
--re.search()

Правильно! re.findall() знаходить всі входження патерну у рядку.

3. Що символізує символ ^ у регулярних виразах?

--Будь-який символ
--Кінець рядка
!-Початок рядка
--Буквальний символ каретки

Вірно! Символ ^ в регулярних виразах означає початок рядка.

4. Як у Python представити будь-який один символ у регулярному виразі?

-- \w
-- *
!- .
-- \d

Правильна відповідь символ ., а інші символи мають різне значення але точно не 
будь який символ у регулярних виразах.

5. Що робить вираз f"{value:%}" у форматуванні рядків Python?

!-Конвертує value в відсоток
--Форматує value як грошову суму
--Екранізує символ відсотка у рядку
--Знаходить залишок від ділення value на 100

Правильно! f"{value:%}" використовується для конвертації значення у відсоткове вираження.

6. Що робить метод split() у Python?

!-Розділяє рядок на список підрядків на основі розділювача
--Розділяє список на кілька рівних частин
--Розділяє рядок на окремі символи
--Розділяє об'єкт дати на його компоненти, дата та час

Правильно! Метод split() розділяє рядок на підрядки на основі заданого розділювача.

7. Які символи в регулярному виразі Python відповідають будь-якій цифрі та будь-якій букві відповідно?

!- \d та \w
-- \s та \D
-- \w та \S
-- \D та \s

Правильно! У регулярних виразах, \d відповідає будь-якій цифрі, а \w - будь-якій букві або цифрі.

8. Як у регулярних виразах Python позначається група символів, яка може зустрічатися 0 або більше разів?

-- +
!- *
-- ?
-- .

Правильно! Символ * в регулярних виразах використовується для позначення 
групи символів, яка може повторюватися 0 або більше разів.

9. У регулярних виразах Python, яка функція використовується для пошуку 
першого входження шаблону в рядку?

-- re.findall()
-- re.match()
!- re.search()
-- re.sub()

Правильно! re.search() шукає перше входження заданого шаблону в рядку.

Силка на урок:
https://youtu.be/PFdt7hmy3wY

додаткова практика з ментором:
https://youtu.be/1QlhYpM_f0c