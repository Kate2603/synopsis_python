Форматування рядків



Будь-яке число можна записати кількома варіантами запису:

десятковий запис
двійкове представлення
шістнадцяткове представлення
наукова нотація
з фіксованою точністю (кількістю знаків після коми)
та інші.



Наприклад, вивести числа від 1 до 15 в десятковому, шістнадцятковому, вісімковому і двійковому представленні можна наступним чином:



✂️ Цей код можна запустити!

for i in range(8):
    s = f"int: {i:d};  hex: {i:#x};  oct: {i:#o};  bin: {i:#b}"
    print(s)



Виведення:

int: 0;  hex: 0x0;  oct: 0o0;  bin: 0b0
int: 1;  hex: 0x1;  oct: 0o1;  bin: 0b1
int: 2;  hex: 0x2;  oct: 0o2;  bin: 0b10
int: 3;  hex: 0x3;  oct: 0o3;  bin: 0b11
int: 4;  hex: 0x4;  oct: 0o4;  bin: 0b100
int: 5;  hex: 0x5;  oct: 0o5;  bin: 0b101
int: 6;  hex: 0x6;  oct: 0o6;  bin: 0b110
int: 7;  hex: 0x7;  oct: 0o7;  bin: 0b111



Форматування за допомогою виразів у f-рядках дозволяє не тільки вставляти значення змінних у рядок, а й форматувати ці значення за допомогою спеціальних вказівок.



Наприклад:



✂️ Цей код можна запустити!

price = 19.99
quantity = 3
total = f"Total: {price * quantity:.2f}"
print(total)



В цьому прикладі використовується форматування :.2f для відображення дійсного числа з двома цифрами після десяткового розділювача. Виведення:



Total: 59.97



У виразі :.2f:

: вводить специфікацію формату.
.2 означає, що після десяткової крапки має бути виведено дві цифри.
f вказує на формат дійсного числа.


Цей формат дуже корисний при виведенні грошових сум, наукових даних, або будь-яких інших чисел, де потрібна точність до певного числа знаків після коми.



Крім того, при створенні рядків буває корисним відформатувати рядок так, щоб знаки на різних рядках були один під одним (додати пробілів), додати заповнення в рядки для того, щоб результат був завжди однієї і тієї самої довжини. Або вивести квадрати та куби чисел до 12 у вигляді таблиці, відцентрувавши значення у стовпцях по 10 символів шириною:



✂️ Цей код можна запустити!

width = 5
for num in range(12):
    print(f'{num:^10} {num**2:^10} {num**3:^10}')



Виведення:

    0          0          0     
    1          1          1     
    2          4          8     
    3          9          27    
    4          16         64    
    5          25        125    
    6          36        216    
    7          49        343    
    8          64        512    
    9          81        729    
    10        100        1000   
    11        121        1331



Мета роботи з метамовою форматування полягає у зазначенні в фігурних дужках, яким чином варто перетворити значення перед тим як підставити його в рядок.



Вирівнювання та ширина поля в f-рядках в Python дозволяють контролювати, як текст або числа відображаються у рядку, включаючи вирівнювання (ліворуч, праворуч, по центру) та загальну ширину поля, яка використовується для відображення вмісту. Ці можливості особливо корисні, коли вам потрібно створити впорядкований, охайний текстовий вивід.



Ширина поля вказує мінімальну ширину поля, в яке буде поміщено вміст. Якщо вміст коротший за ширину поля, він буде доповнений пробілами.



Вирівнювання визначає, як вміст буде вирівняний всередині вказаної ширини поля. Можливі варіанти вирівнювання:



<: Вирівнювання вмісту по лівому краю.
>: Вирівнювання вмісту по правому краю.
^: Вирівнювання вмісту по центру.
=: Використовується для вирівнювання чисел, при цьому знак (якщо він є) відображається зліва, а число - по правому краю поля.


Наприклад:



✂️ Цей код можна запустити!

name = "Alice"
formatted = f"{name:>10}"
print(formatted)  # Виведе: '     Alice' (вирівнювання праворуч)



Виведення з 5-ма пробілами ліворуч.

     Alice



☝ Форматування спочатку було зроблено для методу format, який приймає аргументи, як значення для щоб підставити їх в рядок, замість виразів у фігурних дужках.


Також корисним є форматування відсотків за допомогою f-рядків, що дозволяє зручно відображати числа як відсотки. Для цього використовується специфікатор формату %, який множить число на 100 і додає символ відсотка % до рядка. Це особливо корисно при роботі з даними, де потрібно представляти частки або пропорції у форматі відсотків.



Форматування відсотків у f-рядках виглядає так:



f"{value:<ширина>.<точність>%}"



де:

value - значення, яке потрібно перетворити у відсотки.
<ширина> - загальна ширина поля; необов'язково.
<точність> - кількість знаків після десяткової крапки; необов'язково.


Наприклад:



✂️ Цей код можна запустити!

completion = 0.756
formatted = f"{completion:.1%}"
print(formatted)  # Виведе: '75.6%'



Тут число 0.756 перетворюється на '75.6%', де .1 вказує на вивід однієї цифри після десяткової крапки. Виведення:



75.6%



Приклад без десяткових частин:



✂️ Цей код можна запустити!

progress = 0.5
formatted = f"{progress:.0%}"
print(formatted)



У цьому випадку число 0.5 перетворюється на '50%', без додаткових десяткових знаків.



Виведення:

50%



Це досить широка тема і для таких та подібних завдань в Python вбудована своя міні-мова форматування рядків з якою ви можете ознайомитися далі самостійно.