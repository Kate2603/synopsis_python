Пакетний менеджер pip та створення віртуального оточення

Встановлення додаткових пакетів в Python здійснюється менеджерами пакетів. Стандартний (але не єдиний) 
менеджер пакетів Python — це pip. Пакетний менеджер pip є інструментом, який дозволяє вам встановлювати, 
оновлювати та видаляти бібліотеки та інструменти, що використовуються в програмуванні на Python. Це 
ключовий інструмент у світі Python, який робить керування зовнішніми бібліотеками та їхніми залежностями 
значно простішим.

❓ Головне питання яке виникає у початківця навіщо взагалі потрібен pip?

Головна мета — це управління бібліотеками. Пакетний менеджер pip дозволяє легко встановлювати, оновлювати 
та видаляти бібліотеки. Бібліотеки Python - це набори додаткових функцій та інструментів, які не входять 
у стандартну бібліотеку Python. Вони можуть робити все, від обробки даних до створення веб-сайтів.

Пакетний менеджер надає доступ до великої кількості ресурсів. За допомогою pip ви маєте доступ до тисяч 
бібліотек, доступних на PyPI (Python Package Index), офіційному сховищі бібліотек Python.

Коли бібліотека потребує для своєї роботи інших бібліотек, то pip автоматично встановлює всі необхідні 
залежності, тобто вам не потрібно вручну шукати та встановлювати кожну з них. Він також допомагає 
управляти версіями бібліотек, щоб ви могли використовувати версію, яка сумісна з вашим проєктом.

pip написаний на Python і є пакетом Python, який входить в стандартне постачання (попередньо встановлений). 
Ви можете, звичайно, окремо його встановити або оновити як будь-який інший пакет, якщо потрібно.

Пакетний менеджер це не якась особливість мови Python. Існують пакетні менеджери в інших мовах програмування.

JavaScript та Node.js використовує npm (Node Package Manager) який є стандартним пакетним менеджером для 
JavaScript, особливо для розробки на Node.js.
В Ruby існує gem. Він використовується для управління RubyGems – бібліотеками або додатками для Ruby.
PHP має Composer який є інструментом для управління залежностями в PHP, дозволяючи вам визначати бібліотеки, 
від яких залежить ваш проєкт.
У Java є декілька інструментів для управління залежностями та пакетами, таких як Maven і Gradle, які 
автоматизують процес включення зовнішніх бібліотек та інших залежностей.
Для .NET NuGet є менеджером пакетів для платформи та дозволяє розробникам легко інтегрувати сторонні 
бібліотеки в свої проєкти.

Пакетні менеджери відіграють ключову роль у розробці сучасного програмного забезпечення. Вони спрощують 
процес додавання, оновлення, і видалення бібліотек, гарантуючи, що проєкт містить всі необхідні залежності 
з правильними версіями. Це не лише заощаджує час розробників, але й забезпечує більшу стабільність і 
сумісність у програмних проєктах.

Використання pip передбачає виконання його як скрипту Python з аргументами під час виклику.

Наприклад, щоб вивести список встановлених пакетів:

python -m pip list

Значення -m вказує, що потрібно викликати пакет як скрипт, що виконується, list — це аргумент, за 
яким pip "розуміє", що потрібно зробити (вивести список встановлених пакетів). Виведення буде схожим 
на це, але буде відрізнятися, бо на різних комп'ютерах свій набір встановлених пакетів.

Package              Version
-------------------- -----------
argon2-cffi          21.3.0
argon2-cffi-bindings 21.2.0
asttokens            2.0.8
attrs                22.1.0
...

Часто в системі прописано, що pip запускається за допомогою Python і ви можете викликати pip напряму:

pip list

Повна документація з pip доступна на сторінці офіційної документації.

Для встановлення останньої версії пакету, на прикладі пакету requests:

 pip install requests

Для встановлення конкретної версії пакету requests:

pip install requests==2.28.2

Встановлення версії пакету requests новішого за 2.28.2:

pip install requests>=2.28.2

Встановлення версії пакету requests давнішого за 2.28.2:

pip install requests<=2.28.2

Видалення пакету requests:

pip uninstall requests

Список встановлених пакетів з версіями:

pip freeze

Виведення:

argon2-cffi==21.3.0
argon2-cffi-bindings==21.2.0
asttokens==2.0.8
attrs==22.1.0
...