Функція dir()

Функція dir() в Python використовується для отримання переліку атрибутів (включно з методами) 
об'єкта чи модуля. Це корисно для розуміння того, що доступно в модулі після його імпортування:

dir(module_name): Повертає список атрибутів, визначених у модулі module_name.
Без аргументів, dir() повертає список атрибутів з поточної області визначень.

Вбудована функція dir() повертає список визначених імен у просторі імен. Без аргументів 
вона виробляє алфавітно відсортований список імен у поточній локальній таблиці символів:

✂️ Цей код можна запустити! 

# main.py
from mymodule import say_hello as greeting

print(dir())
print(greeting("World"))

Коли ми викликаємо функцію dir() без аргументів в середині модуля, вона повертає список 
назв усіх об'єктів (змінних, функцій, класів тощо), доступних у поточній області видимості. 
Фактично, що доступно в середині файлу main.py під час запуску. У нашому випадку, це включає 
зокрема вбудовані імена, такі як __annotations__, __builtins__, тощо і псевдонім greeting, 
який ми створили для функції say_hello з модуля mymodule.py.

['__annotations__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', 
'__name__', '__package__', '__spec__', 'greeting']
Hello, World!

Зазначене виведення ['__annotations__', '__builtins__', '__cached__', '__doc__', 
'__file__', '__loader__', '__name__', '__package__', '__spec__', 'greeting'] 
показує список доступних вам імен. Але цей список не включає імена, які містяться в модулі 
mymodule, оскільки ми імпортували лише одну його функцію, а не весь модуль.

