Читання та запис файлів

Модуль pathlib надає кілька методів для читання з файлів та запису в них, що зменшує 
необхідність використання стандартного модуля open. Але вони не замінюють його, а є доповненням.

Методи read_text() та write_text() використовуються для читання та запису текстових файлів.

Синтаксис методу read_text()

Path.read_text(encoding=None, errors=None)

Параметри:

- encoding - необов'язковий, ім'я кодування, яке використовується для декодування файлу. 
    Якщо не вказано, використовується кодування за замовчуванням.
- errors - необов'язково, інструкція, як обробляти помилки декодування.

Синтаксис методу write_text()

Path.write_text(data, encoding=None, errors=None)

- data - рядок, який необхідно записати в файл.
- encoding - необов'язковий, ім'я кодування, яке використовується для декодування файлу. 
    Якщо не вказано, використовується кодування за замовчуванням.
- errors - необов'язково, інструкція, як обробляти помилки декодування.

Як бачимо параметр errors, в обох методах, визначає, як мають бути оброблені ці помилки.

- errors='strict'. Це значення за замовчуванням. Якщо виникає помилка декодування, буде викинуто 
    виключення UnicodeDecodeError.
- errors='ignore'. Якщо ми хочемо ігнорувати помилки декодування. Частини тексту, що не можуть 
    бути декодовані, будуть просто пропущені.
- errors='replace'. Якщо пропускати ми не хочемо, то замінимо неможливі для декодування символи 
    на спеціальний символ заміни, згідно документації символ '?'.

Приклад запису тексту у файл

✂️ Цей код можна запустити! 

from pathlib import Path

# Створення об'єкту Path для файлу
file_path = Path("example.txt")

# Запис тексту у файл
file_path.write_text("Привіт світ!", encoding="utf-8")

Тут рядок "Привіт світ!" записується в файл example.txt.

Приклад читання тексту з файлу

✂️ Цей код можна запустити! 

from pathlib import Path

# Створення об'єкту Path для файлу
file_path = Path("example.txt")

# Читання тексту з файлу
text = file_path.read_text(encoding="utf-8")
print(text)

У цьому прикладі текст з файлу example.txt читається за допомогою read_text() та виводиться на екран.

Виведення:

Привіт світ!

Методи read_bytes() та write_bytes() використовуються для читання та запису бінарних файлів.

Приклад запису бінарних даних у файл

✂️ Цей код можна запустити! 

from pathlib import Path

# Створення об'єкту Path для бінарного файлу
file_path = Path("example.bin")

# Бінарні дані для запису
data = b"Python is great!"

# Запис байтів у файл
file_path.write_bytes(data)

Тут бінарні дані data записуються в файл example.bin.

Приклад читання бінарних даних з файлу

✂️ Цей код можна запустити! 

from pathlib import Path

# Створення об'єкту Path для бінарного файлу
file_path = Path("example.bin")

# Читання байтів з файлу
binary_data = file_path.read_bytes()
print(binary_data)

У цьому випадку бінарні дані з файлу example.bin читаються за допомогою read_bytes().

Виведення:

b'Python is great!'



